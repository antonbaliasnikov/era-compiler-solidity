name: Changesets

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: yarn

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install workspaces
        run: cargo install cargo-workspaces

      - name: Define next release version
        id: next-release
        shell: 'bash -ex {0}'
        run: |
          npx changeset status --output=release-status.json
          NEXT_RELEASE_VERSION=$(jq -r '.releases[] | select(.name == "era-compiler-solidity") | .newVersion' release-status.json)
          NEXT_RELEASE_TYPE=$(jq -r '.releases[] | select(.name == "era-compiler-solidity") | .type' release-status.json)
          echo "version=${NEXT_RELEASE_VERSION}" >> "${GITHUB_OUTPUT}"
          echo "type=${NEXT_RELEASE_TYPE}" >> "${GITHUB_OUTPUT}"

      - name: Create Release Pull Request
        id: changesets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TYPE: ${{ steps.next-release.outputs.type }}
        uses: changesets/action@v1
        with:
          version: yarn bump-version

      - name: Publish
        if: steps.changesets.outputs.hasChangesets == 'false'
        # You can do something when a publish should happen.
        run: echo "Custom cargo and binaries publish here"
